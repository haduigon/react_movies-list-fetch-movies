{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","defaultState","useState","query","setQuery","newMovie","setNewMovie","loaderState","setLoaderState","isFound","setIsFound","htmlFor","type","value","id","placeholder","classNames","onChange","e","handleInput","target","disabled","length","onClick","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","Title","Plot","Poster","imdbID","finally","App","setMovies","newM","every","film","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f472e36b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl === 'N/A' ? (\n            'https://via.placeholder.com/360x270.png?text=no%20preview') : (\n            movie.imgUrl\n          )}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, {\n  useState,\n} from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport {\n  getMovie,\n} from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const defaultState = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [query, setQuery] = useState('');\n  const [newMovie, setNewMovie] = useState(defaultState);\n  const [loaderState, setLoaderState] = useState(false);\n  const [isFound, setIsFound] = useState(true);\n\n  function handleInput(e: string) {\n    setQuery(e);\n    setIsFound(true);\n  }\n\n  function handleMovieAddButton(e: React.MouseEvent) {\n    e.preventDefault();\n    onAdd(newMovie);\n    setNewMovie(defaultState);\n    setQuery('');\n  }\n\n  function handleSearch(e: React.MouseEvent) {\n    e.preventDefault();\n    setLoaderState(true);\n    getMovie(query)\n      .then((res) => {\n        if ('Error' in res) {\n          return setIsFound(false);\n        }\n\n        return (\n          setNewMovie({\n            title: res.Title,\n            description: res.Plot,\n            imgUrl: res.Poster,\n            imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n            imdbId: res.imdbID,\n          }),\n          setIsFound(true)\n        );\n      })\n      .finally(() => setLoaderState(false));\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              value={query}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': !isFound,\n              })}\n              onChange={(e) => handleInput(e.target.value)}\n            />\n          </div>\n\n          {!isFound && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              disabled={query.length === 0 && true}\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': loaderState,\n              })}\n              onClick={handleSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {query.length > 0 && (\n              <button\n                data-cy=\"addButton\"\n                type=\"submit\"\n                className=\"button is-primary\"\n                onClick={handleMovieAddButton}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {newMovie.imdbId && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=fc4fd210';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, {\n  useState,\n} from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([] as Movie[]);\n  const addMovie = (newM: Movie) => {\n    if (movies.every(film => film.imdbId !== newM.imdbId)) {\n      setMovies([...movies, newM]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}